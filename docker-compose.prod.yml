version: '3.8'

services:
  traefik:
    image: traefik:v2.11
    container_name: comp0022_traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik=true"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false" # Only expose services explicitly
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=your-email@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./letsencrypt:/letsencrypt"
    networks:
      - internal_network
      - external_network

  api:
    build: ./backend
    container_name: comp0022_fastapi
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`localhost`) && PathPrefix(`/api/v1`)"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.middlewares.strip-prefix.stripprefix.prefixes=/api/v1"
      - "traefik.http.routers.api.middlewares=strip-prefix"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
    command: uvicorn app.main:app --host 0.0.0.0 --proxy-headers --port 8000 --root-path /api/v1
    depends_on:
      - db
    networks:
      - internal_network

  web-app:
    container_name: comp0022_next_app
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    depends_on:
      - api
    env_file:
      - .env
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web-app.rule=Host(`localhost`)"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.services.web-app.loadbalancer.server.port=3000"
    networks:
      - internal_network

  db:
    image: postgres:latest
    container_name: comp0022_postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/scripts:/docker-entrypoint-initdb.d
    env_file:
      - .env
    networks:
      - internal_network

volumes:
  db-data:

networks:
  internal_network:
    driver: bridge
  external_network:
    name: web_gateway