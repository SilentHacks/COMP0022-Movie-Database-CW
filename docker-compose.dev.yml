version: '3.8'

services:
  traefik:
    image: traefik:v2.11
    container_name: comp0022_traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik=true"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    command:
      - "--api.insecure=true" # Enables the dashboard on an insecure endpoint (for development only)
      - "--api.dashboard=true" # Enables the dashboard
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false" # Only expose services explicitly
      - "--providers.file.filename=/traefik/dynamic.yml" # Load dynamic configuration from a file
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./traefik:/traefik/"
    networks:
      - internal_network

  api:
    build: ./backend
    container_name: comp0022_fastapi
    environment:
      - POSTGRESQL_HOST=pgpool
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
#    These are disabled for development
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.api.rule=Host(`localhost`) && PathPrefix(`/api/v1`)"
#      - "traefik.http.routers.api.tls=true"
#      - "traefik.http.middlewares.strip-prefix.stripprefix.prefixes=/api/v1"
#      - "traefik.http.routers.api.middlewares=strip-prefix"
#      - "traefik.http.services.api.loadbalancer.server.port=8000"
    command: uvicorn app.main:app --host 0.0.0.0 --proxy-headers --port 8000
    depends_on:
      - pgpool
    ports:
      - "8000:8000"
    networks:
      - internal_network

  web-app:
    container_name: comp0022_next_app
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    depends_on:
      - api
    environment:
      - NEXT_PUBLIC_API_URL=http://api:8000
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web-app.rule=Host(`localhost`)"
      - "traefik.http.routers.web-app.tls=true"
      - "traefik.http.services.web-app.loadbalancer.server.port=3000"
    ports:
      - "3000:3000"
    networks:
      - internal_network

  pg-0:
    image: bitnami/postgresql-repmgr:16
    container_name: comp0022_postgres_0
    networks:
      - internal_network
    volumes:
      - db-data:/bitnami/postgresql
      - ./db/scripts:/docker-entrypoint-initdb.d
    environment:
      - POSTGRESQL_PGAUDIT_LOG=READ,WRITE
      - POSTGRESQL_LOG_HOSTNAME=true
#      - POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}  # Bitnami image uses POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-1,pg-0
      - REPMGR_NODE_NAME=pg-0
      - REPMGR_NODE_NETWORK_NAME=pg-0
      - REPMGR_USERNAME=${REPMGR_USERNAME}
      - REPMGR_PASSWORD=${REPMGR_PASSWORD}

  pg-1:
    image: bitnami/postgresql-repmgr:16
    container_name: comp0022_postgres_1
    restart: always
    networks:
      - internal_network
    depends_on:
      - pg-0
    environment:
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_MASTER_HOST=pg-0
      - POSTGRESQL_PGAUDIT_LOG=READ
      - POSTGRESQL_LOG_HOSTNAME=true
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-0,pg-1
      - REPMGR_NODE_NAME=pg-1
      - REPMGR_NODE_NETWORK_NAME=pg-1
      - REPMGR_USERNAME=${REPMGR_USERNAME}
      - REPMGR_PASSWORD=${REPMGR_PASSWORD}

  pgpool:
    image: bitnami/pgpool:4
    ports:
      - "5432:5432"
    networks:
      - internal_network
    depends_on:
      - pg-0
      - pg-1
    environment:
      - PGPOOL_BACKEND_NODES=0:pg-0:5432:4:primary:ALWAYS_PRIMARY,1:pg-1:5432:6:replica
#      - PGPOOL_POSTGRES_USERNAME=${POSTGRESQL_USERNAME}  # Breaks if you set this
      - PGPOOL_POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - PGPOOL_ADMIN_USERNAME=${PGPOOL_ADMIN_USERNAME}
      - PGPOOL_ADMIN_PASSWORD=${PGPOOL_ADMIN_PASSWORD}
      - PGPOOL_ENABLE_LOAD_BALANCING=yes
      - PGPOOL_ENABLE_STATEMENT_LOAD_BALANCING=yes
      - PGPOOL_SR_CHECK_USER=${REPMGR_USERNAME}
      - PGPOOL_SR_CHECK_PASSWORD=${REPMGR_PASSWORD}
      - PGPOOL_ENABLE_WATCHDOG=yes
      - PGPOOL_ENABLE_QUERY_CACHE=yes
      - PGPOOL_ENABLE_LDAP=no

volumes:
  db-data:

networks:
  internal_network:
    driver: bridge